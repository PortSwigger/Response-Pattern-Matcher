/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'pmd'

group 'com.jackj07.rpm'

//Add version to jar name
version getVersion()

sourceCompatibility = 17.0
targetCompatibility = 17.0

//Keep updated
def getVersion(){
    return "v2.0.1"
}

allprojects {
    repositories {
        mavenCentral()
        maven {url "https://jitpack.io"}
    }
}

dependencies {
    implementation group: 'net.portswigger.burp.extender', name: 'burp-extender-api', version: '2.3'
    implementation 'com.github.CoreyD97:BurpExtenderUtilities:c03c1a2a1f'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.0'
    testCompileOnly files("${System.properties['user.home']}\\AppData\\Local\\Programs\\BurpSuiteCommunity\\burpsuite_community.jar")
    testCompileOnly group: 'org.mockito', name: 'mockito-core', version: '2.23.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

jar{
    archiveBaseName = project.name
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        (configurations.compileClasspath).collect { it.isDirectory() ? it : zipTree(it) }
    }{
        exclude '/test/*'
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}

task testJar(type: Jar) {
    archiveBaseName = project.name + "-TEST"
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    dependsOn testClasses
    dependsOn pmdTest
    dependsOn pmdMain
    sourceSets.main.output.each {
        from it
    }
    sourceSets.test.output.each {
        from it
    }

    sourceSets.test.runtimeClasspath.each { File f ->
        if (f.name.endsWith('.jar')) {
            from zipTree(f)
        } else {
            from f
        }
    }

}

//Designate jar output directory
tasks.withType(Jar) {
    destinationDirectory = file("$rootDir/releases")
}

//Run JUnit tests using Gradle
test{
    useJUnitPlatform()
}

pmd {
    consoleOutput = true
    toolVersion = "6.21.0"
    rulesMinimumPriority = 5
    ruleSets = ["category/java/errorprone.xml", "category/java/bestpractices.xml"]
}